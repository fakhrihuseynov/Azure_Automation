{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "AdressPrefix": {
            "type": "string"
        },
        "SubnetAdressPrefix": {
            "type": "string"
        },
        "VnetDdosProtection": {
            "type": "bool"
        },
        "publicIpAddressType": {
            "type": "string"
        },
        "virtualmachinesize": {
            "type": "string"
        },
        "Password": {
            "type": "securestring"
        },
        "Username": {
            "type": "string"
        },
        "counter": {
            "type": "int"
        },
        "registrationKey": {
            "type": "securestring"
        },
        "registrationUrl": {
            "type": "securestring"
        },
        "configurationMode": {
            "type": "string"
        },
        "actionAfterReboot": {
            "type": "string"
        }
    },
    "variables": {
        "VnetName": "[concat(resourceGroup().name, 'Vnet')]",
        "SubnetName": "[concat(variables('VnetName'), 'Subnet')]",
        "publicIpAddressName": "[concat(resourceGroup().name, 'PublicIP')]",
        "nicName": "[concat(resourceGroup().name, 'NIC')]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VnetName'), variables('SubnetName'))]",
        "virtualMachineName": "[concat(resourceGroup().name, 'VM')]"
    },
    "resources": [
        {
            "apiVersion": "2020-11-01",
            "name": "[variables('VnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('AdressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('SubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('SubnetAdressPrefix')]"
                        }
                    }
                ],
                "enableDdosProtection": "[parameters('VnetDdosProtection')]"
            }
        },
        {
            "name": "[concat(variables('publicIpAddressName'), copyIndex(1))]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
            },
            "copy": {
                "name": "[concat(variables('publicIpAddressName'), 'copy')]",
                "count": "[parameters('counter')]"
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), copyIndex(1))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('VnetName'))]",
                "[concat(variables('publicIpAddressName'), copyIndex(1))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId ('Microsoft.Network/publicIPAddresses/', concat(variables('publicIPAddressName'), copyIndex(1)))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "[concat(variables('nicname'), 'copy')]",
                "count": "[parameters('counter')]"
            }
        },
        {
            "name": "[concat(variables('virtualMachineName'), copyIndex(1))]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat(variables('nicName'), copyIndex(1))]",
                "[variables('VnetName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage"
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex(1)))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(variables('virtualMachineName'), copyIndex(1))]",
                    "adminUsername": "[parameters('Username')]",
                    "adminPassword": "[parameters('Password')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                }
            },
            "copy": {
                "name": "[concat(variables('virtualMachineName'), 'copy')]",
                "count": "[parameters('counter')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('virtualMachineName'), copyIndex(1),'/Microsoft.Powershell.DSC')]",
            "apiVersion": "2020-12-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat(variables('virtualMachineName'), copyIndex(1))]"
            ],
            "copy": {
                "name": "ExtCopy",
                "count": "[parameters('counter')]"
            },
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.19",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "Items": {
                        "registrationKeyPrivate": "[parameters('registrationKey')]"
                    }
                },
                "settings": {
                    "Properties": [
                        {
                            "Name": "RegistrationKey",
                            "Value": {
                                "UserName": "PLACEHOLDER_DONOTUSE",
                                "Password": "PrivateSettingsRef:registrationKeyPrivate"
                            },
                            "TypeName": "System.Management.Automation.PSCredential"
                        },
                        {
                            "Name": "RegistrationUrl",
                            "Value": "[parameters('registrationUrl')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "NodeConfigurationName",
                            "Value": "",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "ConfigurationMode",
                            "Value": "[parameters('configurationMode')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "ConfigurationModeFrequencyMins",
                            "Value": 15,
                            "TypeName": "System.Int32"
                        },
                        {
                            "Name": "RefreshFrequencyMins",
                            "Value": 30,
                            "TypeName": "System.Int32"
                        },
                        {
                            "Name": "RebootNodeIfNeeded",
                            "Value": true,
                            "TypeName": "System.Boolean"
                        },
                        {
                            "Name": "ActionAfterReboot",
                            "Value": "[parameters('actionAfterReboot')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "AllowModuleOverwrite",
                            "Value": false,
                            "TypeName": "System.Boolean"
                        },
                        {
                            "Name": "Timestamp",
                            "Value": "MM/dd/yyyy H:mm:ss tt",
                            "TypeName": "System.String"
                        }
                    ]
                }
            }
        }
    ]
}